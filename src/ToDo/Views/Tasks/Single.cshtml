@using Microsoft.AspNetCore.Html

@model ToDo.ViewModels.Tasks.Single

@{
    ViewData["Title"] = "View Task";

    async Task<IHtmlContent> RenderStatusIconAsync()
    {
        return await Component.InvokeAsync("StatusIcon", new { DueDate = Model.Task.DueDate, IsCompleted = Model.Task.IsCompleted });
    }
}

@section Actions {
    @if (Model.Task.IsCompleted)
    {
        <a class="normal" asp-action="ToDo" asp-route-id="@Model.Task.Id"><i class="fas fa-calendar"></i>ToDo</a>
    }
    else
    {
        <a class="normal" asp-action="Complete" asp-route-id="@Model.Task.Id"><i class="fas fa-check"></i>Complete</a>
    }

    <a class="normal" asp-action="Edit" asp-route-id="@Model.Task.Id"><i class="fas fa-edit"></i>Edit</a>
    <a class="destructive" asp-action="Delete" asp-route-id="@Model.Task.Id"><i class="fas fa-times"></i>Delete</a>
}

<h2 class="task-name">@Model.Task.Name@await RenderStatusIconAsync()</h2>
<p>Due date: <span>@Model.Task.DueDate.ToString("d")</span></p>
<p class="task-description">@Model.Task.Description</p>